// Copyright 2025 Chaukas AI
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0

syntax = "proto3";

package chaukas.spec.client.v1;

import "chaukas/spec/common/v1/events.proto";
import "chaukas/spec/common/v1/query.proto";

option go_package = "github.com/chaukasai/spec/chaukas/spec/client/v1;v1";

// Client-side Chaukas service for SDK integration
service ChaukasClientService {
  // Health check endpoint
  rpc Healthz(HealthzRequest) returns (HealthzResponse);

  // Get supported capabilities
  rpc GetCapabilities(GetCapabilitiesRequest) returns (GetCapabilitiesResponse);

  // Ingest a single event
  rpc IngestEvent(IngestEventRequest) returns (IngestEventResponse);

  // Ingest a batch of events
  rpc IngestEventBatch(IngestEventBatchRequest) returns (IngestEventBatchResponse);

  // Query events
  rpc QueryEvents(QueryEventsRequest) returns (QueryEventsResponse);
}

// Request and response types for ChaukasClientService RPCs

// Health check request
message HealthzRequest {}

// Health check response
message HealthzResponse {}

// Get capabilities request
message GetCapabilitiesRequest {}

// Get capabilities response
message GetCapabilitiesResponse {
  chaukas.spec.common.v1.Capabilities capabilities = 1;
}

// Ingest single event request
message IngestEventRequest {
  chaukas.spec.common.v1.Event event = 1;
}

// Ingest single event response
message IngestEventResponse {}

// Ingest event batch request
message IngestEventBatchRequest {
  chaukas.spec.common.v1.EventBatch event_batch = 1;
}

// Ingest event batch response
message IngestEventBatchResponse {}

// Query events request
message QueryEventsRequest {
  chaukas.spec.common.v1.QueryRequest query = 1;
}

// Query events response
message QueryEventsResponse {
  chaukas.spec.common.v1.QueryResponse response = 1;
}
