// Copyright 2025 Chaukas AI
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0

syntax = "proto3";

package chaukas.spec.server.v1;

option go_package = "github.com/chaukas-ai/spec/server/v1;v1";

import "chaukas/spec/common/v1/events.proto";
import "chaukas/spec/common/v1/query.proto";
import "google/protobuf/empty.proto";

// Server-side Chaukas service for platform implementation
service ChaukasServer {
  // Health check endpoint
  rpc Healthz(google.protobuf.Empty) returns (google.protobuf.Empty);
  
  // Get supported capabilities
  rpc GetCapabilities(google.protobuf.Empty) returns (chaukas.spec.common.v1.Capabilities);
  
  // Ingest a single event
  rpc IngestEvent(chaukas.spec.common.v1.Event) returns (IngestEventResponse);
  
  // Ingest a batch of events
  rpc IngestEventBatch(chaukas.spec.common.v1.EventBatch) returns (IngestBatchResponse);
  
  // Query events
  rpc QueryEvents(chaukas.spec.common.v1.QueryRequest) returns (chaukas.spec.common.v1.QueryResponse);
  
  // Server-specific: Get event statistics
  rpc GetEventStats(EventStatsRequest) returns (EventStatsResponse);
}

// Server-specific response types
message IngestEventResponse {
  string event_id = 1;
  string status = 2;
  int64 processed_at = 3;
}

message IngestBatchResponse {
  string batch_id = 1;
  int32 accepted_count = 2;
  int32 rejected_count = 3;
  repeated string rejected_event_ids = 4;
}

message EventStatsRequest {
  string tenant_id = 1;
  string project_id = 2;
  chaukas.spec.common.v1.TimeRange time_range = 3;
}

message EventStatsResponse {
  int64 total_events = 1;
  int64 total_sessions = 2;
  map<string, int64> events_by_type = 3;
  double avg_session_duration_ms = 4;
}