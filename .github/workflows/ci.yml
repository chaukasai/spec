name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint & Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for buf breaking

      - name: Setup buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint proto files
        run: buf lint

      - name: Check proto format
        run: buf format --diff --exit-code

  breaking:
    name: Breaking Changes
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for breaking changes
        run: buf breaking --against 'https://github.com/${{ github.repository }}.git#branch=main'

  build:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22']
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install protobuf>=5.26.0 grpcio>=1.50.0 build twine

      - name: Generate code
        run: make gen-all

      - name: Test Go compilation
        run: |
          cd go
          go mod download
          go build ./...
          go test ./...

      - name: Test Python imports
        run: |
          PYTHONPATH=.generated/python python -c "
          from chaukas.spec.client.v1.client_pb2_grpc import ChaukasClientServiceStub
          from chaukas.spec.server.v1.server_pb2_grpc import ChaukasServerServiceServicer  
          from chaukas.spec.common.v1.events_pb2 import EventType
          print('✅ All imports successful')
          print('EventType.EVENT_TYPE_SESSION_START =', EventType.EVENT_TYPE_SESSION_START)
          "

      # Only build packages once (not in matrix)
      - name: Build Python packages
        if: matrix.go-version == '1.22' && matrix.python-version == '3.11'
        run: |
          pip install build
          make build-packages
      
      # Upload packages (only from one matrix job)
      - name: Upload package artifacts  
        if: matrix.go-version == '1.22' && matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: python-packages
          path: dist/
          retention-days: 7

  package-test:
    name: Package Installation Test
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download package artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-packages
          path: dist/


      - name: Test client package installation
        run: |
          CLIENT_WHL=$(ls dist/chaukas_spec_client-*.whl)
          pip install "$CLIENT_WHL"
          python -c "
          from chaukas.spec.client.v1.client_pb2_grpc import ChaukasClientServiceStub
          from chaukas.spec.common.v1.events_pb2 import Event, EventType
          print('✅ Client package works')
          "

      - name: Test server package installation
        run: |
          pip uninstall -y chaukas-spec-client
          SERVER_WHL=$(ls dist/chaukas_spec_server-*.whl)
          pip install "$SERVER_WHL"
          python -c "
          from chaukas.spec.server.v1.server_pb2_grpc import ChaukasServerServiceServicer
          from chaukas.spec.common.v1.events_pb2 import Event, EventType
          print('✅ Server package works')
          "

